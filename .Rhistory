findata$female <- 2 - findata$female
findata$female
findata$female <- 1 - findata$female
findata$female
library(ggplot2)
library(reshape2)
library(foreign)
data <- read.dta("eurobarometer_trends.dta")
data <- read.dta("eurobarometer_trends.dta")
data <- read.dta("Data/eurobarometer_trends.dta")
View(data)
View(data)
summary(data$mediause) # Get a simple summary
sum(findata$educ)
findata <- read_dta(file = "Data/micro_world.dta")
sum(findata$educ)
summary(findata$educ)
findata$educ[findata$educ=="dk"]<-NA
# Let's look at the structure of our dataset
str(findata$educ)
findata$educ[findata$educ=="4"]<-NA
try(dev.off(),silent=TRUE)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
try(dev.off(),silent=TRUE)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(jpeg)
library(datasets)
# For compatibility with 2.2.21
.get_course_path <- function(){
tryCatch(swirl:::swirl_courses_dir(),
error = function(c) {file.path(find.package("swirl"),"Courses")}
)
}
data(cars)
data(mpg)
data(mpg)
?mpg
??mpg
library(tidyverse)
data(mpg)
state <- data.frame(state.x77, region = state.region)
try(dev.off(), silent=TRUE)
# Put initialization code in this file.
path_to_course <- file.path(.get_course_path(),
"14_310x_Advanced_R","Base_Plotting_System")
try(dev.off(), silent=TRUE)
plot.new()
# For compatibility with 2.2.21
.get_course_path <- function(){
tryCatch(swirl:::swirl_courses_dir(),
error = function(c) {file.path(find.package("swirl"),"Courses")}
)
}
data(cars)
data(mpg)
state <- data.frame(state.x77, region = state.region)
# Put initialization code in this file.
path_to_course <- file.path(.get_course_path(),
"14_310x_Advanced_R","Base_Plotting_System")
try(dev.off(), silent=TRUE)
plot.new()
fname <- paste(path_to_course,"MVData1.jpeg",sep="/")
try(dev.off(),silent=TRUE)
plot.new()
plotArea=par('fig')
rasterImage(readJPEG(fname),plotArea[1],plotArea[3],plotArea[2],plotArea[4],interpolate=FALSE)
# Get the swirl state
getState <- function(){
# Whenever swirl is running, its callback is at the top of its call stack.
# Swirl's state, named e, is stored in the environment of the callback.
environment(sys.function(1))$e
}
# Get the value which a user either entered directly or was computed
# by the command he or she entered.
getVal <- function(){
getState()$val
}
# Get the last expression which the user entered at the R console.
getExpr <- function(){
getState()$expr
}
coursera_on_demand <- function(){
selection <- getState()$val
if(selection == "Yes"){
email <- readline("What is your email address? ")
token <- readline("What is your assignment token? ")
payload <- sprintf('{
"assignmentKey": "ErvVWa8SEeWGUgpgKqm2yQ",
"submitterEmail": "%s",
"secret": "%s",
"parts": {
"JyIsa": {
"output": "correct"
}
}
}', email, token)
url <- 'https://www.coursera.org/api/onDemandProgrammingScriptSubmissions.v1'
respone <- httr::POST(url, body = payload)
if(respone$status_code >= 200 && respone$status_code < 300){
message("Grade submission succeeded!")
} else {
message("Grade submission failed.")
message("Press ESC if you want to exit this lesson and you")
message("want to try to submit your grade at a later time.")
return(FALSE)
}
}
TRUE
}
fname <- pathtofile("color.jpeg")
try(dev.off(),silent=TRUE)
plot.new()
plotArea=par('fig')
rasterImage(readJPEG(fname),plotArea[1],plotArea[3],plotArea[2],plotArea[4],interpolate=FALSE)
View(state)
View(state)
View(findata)
mpg
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = <DATA>) +
<GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
# Left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
# Left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
View(mpg)
View(findata)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
p <- ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
P1 <- ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
p2 <- ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
# Let's look at the structure of our dataset
str(findata$educ)
Po <- p1, p2
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
plot(west$latitude, west$pm25, main = "West")
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
try(dev.off(),silent=TRUE)
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
View(mpg)
?diamonds
ggplot(data = findata) +
geom_bar(mapping = aes(x = fin4))
ggplot(data = findata) +
geom_bar(mapping = aes(x = educ))
View(findata)
ggplot(data = findata) +
geom_point(mapping = aes(x = economy, y = educ))
ggplot(data = findata) +
geom_point(mapping = aes(x = educ, y = economy))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
View(demo)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = stat(prop), group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
library(readxl)
emis_2014_2019 <- read_excel("C:/Users/Nith Kosal/Downloads/emis_2014_2019.xlsx")
View(emis_2014_2019)
df<- emis_2014_2019
library(ggplot2)
ggplot(data=df, aes(x=enrollment, y= teachers)) + geom_point()
ggplot(data=df, aes(x=enrollment, y=teachers)) +
geom_point(color="blue", size=3, alpha=0.6 )+
xlim(0,200000)
ggplot(data=df, aes(x=enrollment, y=teachers, color=cycle,
shape=cycle)) +
geom_point(size=3, alpha=0.6)+
xlim(0,200000)
ggplot(data=df, aes(x=cycle,
y=teachers, color=cycle)) +
geom_point()+
theme(legend.position = "bottom")
ggplot(data=df, aes(x=cycle,
y=teachers, color=cycle)) +
geom_jitter()+
theme(legend.position = "bottom")
ggplot(data=df, aes(x=cycle,
y=teachers, color=cycle)) +
geom_boxplot()+
theme(legend.position = "bottom")
p1<- ggplot(data=df, aes(x=enrollment/100, y=teachers/100, color=cycle,
size=schools, shape=as.factor(year))) + geom_point()
p1
p2<- ggplot(data=df, aes(x=enrollment/1000, y=teachers/1000,
color=cycle, size=schools)) + geom_point() +
stat_smooth(method = "lm") + xlim(0, 200) + ylim(0, 5) +
theme(legend.position = "bottom")
p2
# One link in the regression
p2a<- ggplot(data=df, aes(x=enrollment/1000, y=teachers/1000)) + geom_point(
aes(x=enrollment/1000, y=teachers/1000, color=cycle, size=schools)) +
stat_smooth(method = "lm") + xlim(0, 200) + ylim(0, 5) +
theme(legend.position = "top") + theme_classic()
# Remove the se= "FALSE" in stat_smooth(method = "lm", se = "FALSE")
p2a
p3<- p2 + labs(title = "Student Teacher Ratio At Provincial Level",
y = "Teachers in Thousand", x = "Student in Thousand", caption =
"Source: MoEYS's EMIS", color = "School Cycle", size = "# of
School") + facet_grid(. ~ year)
p3
p3a<- p2a + labs(title = "Student Teacher Ratio At Provincial Level",
y = "Teachers in Thousand", x = "Student in Thousand", caption =
"Source: MoEYS's EMIS", color = "School Cycle", size = "# of
School") + facet_grid(. ~ year) + theme_dark()
p3a
p4<- p2 + labs(title = "Student Teacher Ratio At Provincial Level",
y = "Teachers in Thousand", x = "Student in Thousand", caption =
"Source: MoEYS's EMIS", color = "School Cycle", size = "# of
School") + facet_grid(. ~ year)
p4
p5<- p2 + facet_wrap("province")
p5
p6<- ggplot (df, aes(y=province, x=enrollment, fill=cycle))+
geom_bar(stat="summary", fun = mean)+
#geom_bar(stat="identity")+
labs(x="Mean Enrollment")+
theme(legend.position="bottom")
p6
p7<- ggplot (df, aes(y=reorder(province, enrollment, fun=mean), x=enrollment, fill=cycle))+
geom_bar(stat = "summary", fun=mean, position =position_stack(reverse = TRUE))+
scale_fill_manual(values = c("#6AA121", "#4863A0", "#2B547E"))+ # Fill Color
scale_x_continuous(labels = scales::comma)+
labs(y=NULL)+ theme_classic()+ theme(legend.position="top")+
facet_wrap(~ year)
p7
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
filter(flights, month == 1, day == 1)
#> # A tibble: 842 x 19
#>    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
#>   <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>
#> 1  2013     1     1      517            515         2      830            819
#> 2  2013     1     1      533            529         4      850            830
#> 3  2013     1     1      542            540         2      923            850
#> 4  2013     1     1      544            545        -1     1004           1022
#> 5  2013     1     1      554            600        -6      812            837
#> 6  2013     1     1      554            558        -4      740            728
#> # … with 836 more rows, and 11 more variables: arr_delay <dbl>, carrier <chr>,
#> #   flight <int>, tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>,
#> #   distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>
filter(flights, month == 1, day == 1)
#> # A tibble: 842 x 19
#>    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
#>   <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>
#> 1  2013     1     1      517            515         2      830            819
#> 2  2013     1     1      533            529         4      850            830
#> 3  2013     1     1      542            540         2      923            850
#> 4  2013     1     1      544            545        -1     1004           1022
#> 5  2013     1     1      554            600        -6      812            837
#> 6  2013     1     1      554            558        -4      740            728
#> # … with 836 more rows, and 11 more variables: arr_delay <dbl>, carrier <chr>,
#> #   flight <int>, tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>,
#> #   distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>
filter(flights, month == 1, day == 1)
flights
library(nycflights13)
library(nycflights13)
??flights
install.packages("nycflights13")
library(nycflights13)
flights
?flights
c <- flights
View(c)
filter(flights, month == 1, day == 1)
findata <- read_dta(file = "Data/micro_world.dta")
library(haven)
findata <- read_dta(file = "Data/micro_world.dta")
View(findata)
filter(findata, economy == Cambodia, educ == 1)
filter(findata, economy == "Cambodia", educ == 1)
# filter() allows you to subset observations based on their values.
f1 <- filter(findata, economy == "Cambodia", sex == 1)
# filter() allows you to subset observations based on their values.
f1 <- filter(findata, economy == "Cambodia", female == 1)
f1
# filter() allows you to subset observations based on their values.
(f1 <- filter(findata, economy == "Cambodia", female == 1))
# We can also use filter() for the comparison. R R provides the standard suite:
# >, >=, <, <=, != (not equal), and == (equal).
filter(findata, female = 1)
# We can also use filter() for the comparison. R R provides the standard suite:
# >, >=, <, <=, != (not equal), and == (equal).
filter(findata, female == 1)
sum(findata$female == 1)
sum(findata$female == 2)
c <- a+b
a <- sum(findata$female == 1)
b <- sum(findata$female == 2)
c <- a+b
c
ggplot(data = findata) +
geom_bar(mapping = aes(x = female == 2))
ggplot(data = findata) +
geom_bar(mapping = aes(x = filter(findata, economy == "Cambodia", female == 1)))
ggplot(data = findata) +
geom_bar(mapping = aes(x = filter(findata, economy == "Cambodia", female == 1)))
ggplot(data = findata) +
geom_bar(mapping = aes(x = female))
ggplot(data = findata) +
geom_bar(mapping = aes(x = educ))
ggplot(data = findata) +
geom_point(mapping = aes(x = educ, y = economy))
filter(findata, educ == 3 | educ == 1)
# A useful short-hand for this problem is x %in% y.
no <- filter(findata, educ %in% c(1, 3, 5))
n
no
View(f1)
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(findata, !(age > 60 | educ > 2))
n <- filter(findata, !(age > 60 | educ > 2))
n
sum(n)
summarise(n)
is.na.data.frame(findata)
# If you want to determine if a value is missing, use is.na():
is.na(findata)
df <- tibble(findata$age = c(50, NA, 30))
df
tibble(findata$age = c(50, NA, 30))
arrange(findata, fin5, fin9, fin19)
View(findata)
arrange(findata, desc(educ))
# Select columns with select()
select(findata, economy, age, fin1)
# Select columns with select()
select(findata, economy, age, fin2)
# Select all columns between year and day (inclusive)
select(findata, fin3:fin10)
# Select all columns except those from year to day (inclusive)
select(findata, -(fin3:fin11))
# Select all columns except those from year to day (inclusive)
select(findata, -(fin3:fin10))
rename(findata, tail_num = data)
rename(findata, tail_num = fin2)
rename(findata, f1 = fin2)
?select
iables with mutate()
f1 <- select(findata,
economy:age,
ends_with("1"),
educ,
)
f1
mutate(f1,
f2 = fin21 - fin27c1,
f3 = fin27c1/fin39c1 * 6
)
View(f1)
ggplot(data = findata) +
geom_point(mapping = aes(x = educ, y = economy))
f2 <- mutate(f1,
f2 = fin21 - fin27c1,
f3 = fin27c1/fin39c1 * 6
)
View(f2)
f3 < - transmute(f1,
f2 = fin21 - fin27c1,
f3 = fin27c1/fin39c1 * 6
)
f1
f2 <- mutate(f1,
f2 = fin21 - fin27c1,
f3 = fin27c1/fin39c1 * 6
)
f3 < - transmute(f1,
f2 = fin21 - fin27c1,
f3 = fin27c1/fin39c1 * 6
)
f3 <- transmute(f1,
f2 = fin21 - fin27c1,
f3 = fin27c1/fin39c1 * 6
)
View(f3)
air_time / 60, hours * 60 + minute
transmute(flights,
dep_time,
hour = dep_time %/% 100,
minute = dep_time %% 100
)
# Grouped summaries with summarise()
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
ggplot(data = findata) +
geom_point(mapping = aes(x = educ, y = economy))
#> `summarise()` ungrouping output (override with `.groups` argument)
delay <- filter(delay, count > 20, dest != "HNL")
# It looks like delays increase with distance up to ~750 miles
# and then decrease. Maybe as flights get longer there's more
# ability to make up delays in the air?
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
as_tibble(findata)
