labs(subtitle = "Revenue mensuel par région",x="Région",y="Revenue mensuel")+
guides(fill=guide_legend(title="Code de région"))+
theme_bw()+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
plot.subtitle = element_text(size = 14,face = "bold"))
barplot4
barplot5<-ggplot(data = df2,mapping=aes(x=df2$`Code région`,y=df2$`Type de migration`))+
geom_bar(stat = "identity",aes(fill=df2$`Type de migration`),col="transparent")+
labs(subtitle = "Type de migration par région",x="Région",y="Type de migration")+
guides(fill=guide_legend(title="Type de migration"))+
theme_bw()+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
plot.subtitle = element_text(size = 14,face = "bold"))
barplot5
options(scipen = 999)
mymap<-st_read("Data/gadm36_MLI_shp/gadm36_MLI_4.shp",stringsAsFactors=FALSE)
names(mymap)[4]<-"Code région"
names(mymap)[6]<-"Cercle"
map_and_data<-inner_join(mymap,df2)
sf1<-ggplot(map_and_data)+
geom_sf(aes(fill=map_and_data$`Revenue total mensuel`))+
scale_fill_gradient(low = "#56B1F7",high = "#132B43")
sf1
map1<-tm_shape(map_and_data)+
tm_polygons("Revenue total mensuel",id="Code région",palette="Blues")
map1
tmap_mode("view")
tmap_last()
sqrt(2021)
34 * 4 ^ 4
34 * 4^4
(34 * 4) ^ 2
454 - 3 #kosa
67-
y
y+7
67=7
67-6
"Cambodia"
"Cambodia"; "Thailand"; "Vietnam"; "Laos"
23 * 3
23 * 3
23 * 3 +
3
23 * 3 +
2
23 * 3ˆ
+ 4
23 * 3ˆ
+ 4
23 * 3ˆ
+ 4
23 * 3ˆ4
23*3ˆ4
23*3ˆ4
23*(3ˆ4)
23*(3^3)
23* 3^
+3
23* 3^
+3
+ 4
23* 3^
+3
23* 3 ^
+4
knitr::opts_chunk$set(echo = TRUE)
# Calculate number below:
23 + 27 + 29
?objects
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher")
FF <- c(20, 21, 30, 21)
29:20
Year <- c(1800, 1850, 1900, 1950, 2000)
Carbon <- c(8, 54, 534, 1630, 6611)
plot(Carbon ~ Year, pch=16)
Year <- c(2000:2021)
Ca <- c(0:21)
plot(Ca ~ Year, pch=16)
plot(Ca ~ Year, pch=1)
plot(Ca ~ Year, pch=10)
plot(Ca ~ Year, pch=30)
plot(Ca ~ Year, pch=20)
FF <- c(20, 21, 30, 21)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher")
FutureF
plot(Carbon ˜ Year)
FF <- c(20, 21, 30, 21)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher")
FutureF
plot(FF ˜ FutureF)
FF <- c(20, 21, 30, 21)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher")
FutureF
plot(FF ˜ FutureF, pch=16)
FF <- c(20, 21, 30, 21)
plot(FF ˜ Year, pch=16)
plot(FF ˜ Year, pch=16)
plot(FF ˜ Year, pch=16)
FF <- c(20, 21, 30, 21)
FF
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher")
FutureF
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher", "Editor")
plot(FF ˜ Year, pch=16)
FF <- c(20, 21, 30, 21)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher", "Editor")
FutureF
plot(FF ˜ Year, pch=16)
plot(FF ˜ Year, pch=16)
FF <- c(20, 21, 30, 21)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher", "Editor")
FutureF
plot(FF ˜ FutureF, pch=16)
X <- c(0:21)
plot(X ˜ Year)
plot(X ~ Year, pch=16)
plot(FF ˜ FutureF, pch=16)
plot(FF ~ FutureF, pch=16)
FF <- c(20, 21, 30, 21)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher", "Editor")
FutureF
plot(FF ~ FutureF, pch=16)
FF <- c(20, 21, 30, 21)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher", "Editor")
FutureF
FFTeam <- c(3:6)
plot(FF ~ FFTeam, pch=16)
plot(FF ~ FFTeam, pch=10)
plot(FF ~ FFTeam, pch=16)
# For example
apple <- c(20, 21, 30, 21, 18, 23, 35, 40, 12, 37, 16)
# For example
apple <- c(20, 21, 30, 21, 18, 23, 35, 40, 12, 37, 16)
# For example
apple <- c(20, 21, 30, 21, 18, 23, 35, 40, 12, 37, 16, 32)
orange <- c(24:30, 40:44)
Orange
Orange
orag\
orange
plot(apple ~ orange, pch=16)
apple <- c(20, 21, 30, 21, 18, 23, 35, 40, 12, 37, 16, 32)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher", "Editor")
FutureF
mango <- c(24:30, 40:44)
plot(mango ~ apple, pch=16)
Year <- c(1800, 1850, 1900, 1950, 2000)
Carbon <- c(8, 54, 534, 1630, 6611)
## Now plot Carbon as a function of Year
plot(Carbon ~ Year, pch=16)
23*3
23*3 +
4
4 -
4
23*3^+
2
34*4+
43+
3
knitr::opts_chunk$set(echo = TRUE)
34 *34
+ 3
# Thus, please type in the console like the list blows:
34 *34^
3
23+6^
2
q()
q()
knitr::opts_chunk$set(echo = TRUE)
fruit <- data.frame(Apple = apple, Mango = mango)
fruit
View(fruit)
View(fruit)
rm(Apple)
rm(apple)
rm(apple, mango)
Year <- c(1800, 1850, 1900, 1950, 2000)
Carbon <- c(8, 54, 534, 1630, 6611)
fossilfuel <- data.frame(year=Year, carbon=Carbon)
plot(carbon ~ year, data=fossilfuel, pch=16)
plot(Mango ~ Apple, data=fruit)
getwd()
ls()
getwd()
apple <- c(20, 21, 30, 21, 18, 23, 35, 40, 12, 37, 16, 32)
FutureF <- c("Young Researcher", "Junior Researcher", "Researcher", "Editor")
FutureF     # Display the contents of the vector.
mango <- c(24:30, 40:44)
fruit <- data.frame(Apple = apple, Mango = mango) # Apple is new object get from "apple".
getwd()
ls()
friut[1]
friut[1,]
friut[,2]
fruit[,2]
fruit[2]
fruit[1]
x
q()
fossilfuel
data.frame(fossilfuel)
library(DAAG)
fossilfuel
range(fossilfuel$carbon)
?fossilfuel
plot(fossilfuel)
c <- data.frame(fossilfuel)
View(c)
View(c)
range(fossilfuel$carbon)
range(fossilfuel$year)
hist(cars$speed)
library(tidyverse)
library(tidyr)
library(haven)
library(sjlabelled)
library(reshape2)
library(foreign)
library(dplyr)
# Import the data from the Stata, SPSS, and SAS file with `haven` package
findata <- read_dta(file = "Data/micro_world.dta")
# Print the first ten rows of the dataset
findata
# Print the last six rows of the dataset
tail(findata)
# Print rows 11115, 22119, 91115, and 151115
findata[c(11115,22119,91115,151115),]
# Print number of rows in the column `fin2` and `fin5`
length(findata$fin2)
length(findata$fin5)
dim(findata)
# Show the names of the variable
names(findata)
labels(findata)
# filter() allows you to subset observations based on their values.
(fCambodia <- filter(findata, economy == "Cambodia"))
# Show label
get_label(findata)
# Now, we select some variables, genaral info: fin2 (Yes == 1, NO == 1, DK == 3,
# Refused == 4), unbanked:fin11a-fin11h, saving: fin15, borrowing: fin21
# (both saving and borrowing used for start, operate or grow a business or farm)
# and the main source of money that they come up: fin25.
fdata <- findata %>%
select(economy, regionwb:fin2, fin11a:fin11h, fin15, fin21, fin25)
fdata
fdata <- fdata %>%
rename("country" = "economy", "region" = "regionwb", "pop" = "pop_adult",
"random" = "wpid_random", "gender" = "female", "inc" = "inc_q",
"emp" = "emp_in", "account" = "fin2", "saving" = "fin15",
"borrowed" = "fin21", "finsources" = "fin25")
names(fdata)
str(fdata)
# Gender
fdata$gender
fdata$gender = as.character(fdata$gender)
fdata$gender[fdata$gender == 2]<- "Female"
fdata$gender[fdata$gender == 1]<- "Male"
fdata$gender<-factor(fdata$gender) # this removes unused levels
levels(fdata$gender)<-c("Female", "Male") # Clean up the messy names of the levels
fdata$gender<- as.numeric(fdata$gender) # convert the categories to a numerical scale (cheating a bit!)
class(fdata$gender)
summary(fdata$gender)
# Education levels
summary(fdata$educ) # Get a simple summary
#fdata$educ = as.integer(fdata$educ)
fdata$educ[fdata$educ == "4"]<- NA # Let's consider all the "4" as missing (NA)
fdata$educ[fdata$educ == "5"]<- NA # Let's consider all the "5" as missing (NA)
fdata$educ<-factor(fdata$educ) # this removes unused levels
levels(fdata$educ)<-c("Completed primary or less", "secondary",
"completed tertiary or more") # Clean up the messy names of the levels
fdata$educ<- as.numeric(fdata$educ) # convert the categories to a numerical scale (cheating a bit!)
summary(fdata$educ)
# Income levels
class(fdata$inc)
summary(fdata$inc) # Get a simple summary
fdata$inc = as.integer(fdata$inc)
fdata$inc <- factor(fdata$inc) # this removes unused levels
levels(fdata$inc) <- c("Poorest", "Second", "Middle", "Fourth", "Richest")
fdata$inc <- as.numeric(fdata$inc)
summary(fdata$educ)
# Employment
summary(fdata$emp)
fdata$emp = as.integer(fdata$emp)
fdata$emp <- factor(fdata$emp) # this removes unused levels
levels(fdata$emp) <- c("Out of workforce", "In workforce")
fdata$emp <- as.numeric(fdata$emp)
# Banks account
summary(fdata$account)
fdata$account = as.integer(fdata$account)
fdata$account[fdata$account == "3"]<- NA
fdata$account[fdata$account == "4"]<- NA
fdata$account[fdata$account == "2"]<- 0
fdata$account <- factor(fdata$account)
levels(fdata$account) <- c("No account", "Have account")
fdata$account <- as.numeric(fdata$account)
# A combination of  fin11a-fin11h to a variable together
fdata$fin11 <- ifelse(fdata$fin11a == 1 |
fdata$fin11b == 1 |
fdata$fin11c == 1 |
fdata$fin11d == 1 |
fdata$fin11e == 1 |
fdata$fin11f == 1 |
fdata$fin11g == 1 |
fdata$fin11h == 1, 1, 0)
# Remove fin11a-fin11h
fdata <- subset(fdata,
select = -c(fin11a:fin11h))
# Saving
fdata$saving = as.integer(fdata$saving)
fdata$saving[fdata$saving == "3"]<- NA
fdata$saving[fdata$saving == "4"]<- NA
fdata$saving[fdata$saving == "2"]<- 0
fdata$saving <- factor(fdata$saving)
levels(fdata$saving) <- c("No", "Yes")
fdata$saving <- as.numeric(fdata$saving)
summary(fdata$saving)
fdata$borrowed = as.integer(fdata$borrowed)
fdata$borrowed[fdata$borrowed == "3"]<- NA
fdata$borrowed[fdata$borrowed == "4"]<- NA
fdata$borrowed[fdata$borrowed == "2"]<- 0
fdata$borrowed <- factor(fdata$borrowed)
levels(fdata$borrowed) <- c("No", "Yes")
fdata$borrowed <- as.numeric(fdata$borrowed)
summary(fdata$borrowed)
# Financial Sources
fdata$finsources = as.integer(fdata$finsources)
fdata$finsources[fdata$finsources == "7"]<- NA
fdata$finsources[fdata$finsources == "8"]<- NA
fdata$finsources <- factor(fdata$finsources)
levels(fdata$finsources) <- c("Savings", "Family or friends", "Money from Working",
"A bank, employer, or private lender",
"Selling assets", "Some other sources")
fdata$finsources <- as.numeric(fdata$finsources)
summary(fdata$finsources)
# ------------------------------------------------------------------------------
# To remove all rows with NA values, we use na.omit() function.
final <- na.omit(fdata)
### Aggregate the data at the country-year level
ag <- fdata[c("account", "country", "age")] # make a subset with only the religion variable
attach(ag)
ag <- aggregate(account, by=list(country, age), FUN=mean, na.rm=TRUE)
detach(ag)
molten <- melt(ag,
id = c("Group.1", "Group.2"), na.rm=TRUE)
ggplot(molten) +
geom_line(aes(x=Group.2, y=value, colour=variable)) +
theme(axis.text.x = element_text(angle = 75, hjust = 1)) +
facet_wrap(~Group.1)
ggplot(fdata,
aes(x = finsources)) +
geom_step(aes(y = ..y..), stat = "ecdf") +
labs(y = "Cumulative Density") +
scale_x_discrete(limits = c("1","2","3","4","5", "6"),
breaks = c(1,2,3,4,5, 6),
labels=c("Savings", "Family or friends", "Money from Working",
"A bank, employer, or private lender",
"Selling assets", "Some other sources"))
ggplot(data = fdata) +
geom_bar(mapping = aes(x = finsources))
par(ask=FALSE)
apropos("sort")
example(image)
example(regression)
example(regresson)
example("residuals")
help.start(image)
example(image)
par(ask=FALSE)
example(ask)
example(sum)
example("image")
write.csv(fossilfuel, file='fuel.csv')
fossilfuel <- read.table("fuel.txt", header=TRUE)
write.csv(fossilfuel, file='fuel.csv')
library(DAAG)
datafile('fuel')   ## Places file in working directory,
## ready for input.
fossilfuel <- read.table("fuel.txt", header=TRUE)
write.csv(fossilfuel, file='fuel.csv')
fossilfuel <- read.table("fuel.csv", header=TRUE, sep=",")
fossilfuel
read.csv(fuel.csv)
read.csv("fuel.csv")
sessionInfo()
data(package="datasets")
c(T, F, F, F, T, T, F)
par(mar = c(4, 4, .1, .1))
knitr::opts_chunk$set(echo = TRUE)
library(DAAG)
rforest <- subset(rainforest, species=="Acacia mabellae")$branch
rforest            # Number of small branches (2cm or less)
rainforest
rainforest
?rainforest
rforest
sum(rforest)
sum(rforest, na.rm = TRUE)
NA == 3
rforest
rainforest
lapply(c("gganimate", "tidyverse", "gapminder"), require, character.only = TRUE)
numjobs <- c(982,981,984,982,981,983,983,983,983,979,973,979,
974,981,985,987,986,980,983,983,988,994,990,999)
numjobs
numjobs <- jobs$Prairies
numjobs
numjobs <- ts(numjobs, start=1995, frequency = 12)
plot(numjobs)
first15 <- window(numjobs, start=1995.75, end=1996.25)
Cars93.summary
Cars93.summary <- edit(Cars93.summary)
rownames(Cars93.summary)
colnames(Cars93.summary)
Cars93.summary[1:3, 2:3]
gender <- factor(gender, levels=c("male", "female"))
gender <- c(rep("female",691), rep("male",692))
gender <- factor(gender)
levels(gender)
gender <- factor(gender, levels=c("male", "female"))
gender
first15 <- window(numjobs, start=1995.75, end=1996.25)
first15
rownames(Cars93.summary)   # Extract names of rows
colnames(Cars93.summary)   # Extract column names
names(Cars93.summary)[3] <- "numCars"
Cars93.summary[1:3, 2:3]
Cars93.summary
Cars93.summary[1:3, 2:3]   # Rows 1-3 and columns 2-3
Cars93.summary
library(DAAG)
Cars93.summary
##                       Subsets of data frames
Cars93.summary[1:3, 2:3]   # Rows 1-3 and columns 2-3
Cars93.summary[, 2:3]
subset(Cars93.summary,
subset=c(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE))
subset(Cars93.summary,
subset=c(TRUE, TRUE, FALSE, FALSE, FALSE, FALSE))
USACities
USACanada <- list(USACities=c("NY", "LA", "Chicago"),
CanadaCities=c("Toronto", "Montreal"),
millionsPop=c(USA=305.9, Canada=31.6))
USACanada
View(USACanada)
View(USACanada)
cfseal
weight
with(cfseal, c(mean(weight), median(weight)))
with(pair65,       # stretch of rubber bands, from DAAG
{lenchange <- heated-ambient
c(mean(lenchange), median(lenchange))
})
attach(fossilfuel)  # Attach data frame fossilfuel
year
year
detach(fossilfuel)  # Detach data frame
fossilfuel
attach(fossilfuel)  # Attach data frame fossilfuel
fossilfuel
chickwtAvs <- with(chickwts,
aggregate(weight, by=list(feed), mean))
chickwtAvs
chickwts
head(jobs,3)
Jobs <- stack(jobs, select = 1:6)
head(Jobs,3)
Jobs <- stack(jobs, select = 3:6)
head(Jobs,3)
fossilfuelmat <- matrix(c(1800, 1850, 1900, 1950, 2000,
8, 54, 534, 1630, 6611), nrow=5)
fossilfuelmat
colnames(fossilfuel) <- c("year", "carbon")
fossilfuel
fossilfuelmat <- cbind(year=c(1800, 1850, 1900, 1950, 2000),
carbon=c(8, 54, 534, 1630, 6611))
fossilfuelmat
fossilfuel
fossilfuelmat
knitr::opts_chunk$set(echo = TRUE)
all()
any()
cumprod()
table(Sex=tinting$sex, AgeGroup=tinting$agegp)
library(DAAG)      # tinting is from DAAG
table(Sex=tinting$sex, AgeGroup=tinting$agegp)
sapply(jobs[, -7], range)
ls(pattern="p")
ls(pattern="^p")
tinting
sapply(jobs[, -7], range)
table(Sex=tinting$sex, AgeGroup=tinting$agegp)
print ("Hello , world !")
2020^201+2022
tmp <- c(4,6,3)
rep(tmp,10)
rep(tmp,20)
rep(tmp,times=c(10,20,30))
rep(tmp,l=31)
?rep
( tmp <- matrix( c(1,5,-2,1,2,-1,3,6,-3),nr=3) )
tmp%*%tmp%*%tmp
