?length
library(nycflights13)
# (a) Had an arrival delay of two or more hours.
# To do so, you should find the variable that denote as an arrival delay.
str(flights)
?flights
# Don't use prompt (>) in R scripts.
> a <- c(1:30)
# Don't use prompt (>) in R scripts.
a <- c(1:30)
> b <- seq(30, 1, -1)
b <- seq(30, 1, -1)
installed.packages("tidyverse")
# When create a vector with many values, please don't forest add "c":
# Combine Values into a Vector or List
C <- 2,4,5,6
# When create a vector with many values, please don't forest add "c":
# Combine Values into a Vector or List
C <- c(2,4,5,6)
c
# Before call data frame or vector in the console or R script, please check it first
houseprices$sale.price
area <- c(694, 905, 802, 1366, 716, 963, 821, 714, 1018, 887, 790, 696,
771, 1006, 1191)
sale.price <- c(192, 215, 215, 274, 112.7, 185, 212, 220, 276, 260, 221, 255,
260, 293, 375)
houseprices <- data.frame(area, sale.price)
houseprices
houseprices$sale.price
e<- rep(futureforum, 20) b
e<- rep(futureforum, 20)
e<- rep(futureforum, 20)
# Should carefully about it command and other write.
futureforum <- c(44,66,33)
e<- rep(futureforum, 20)
f <- rep(futureforum, each = 11)
f <- rep(futureforum, each-11)
# == is different from =
x = 20
y = 21
z = 20
x == y
x == z
# Should resign a new object name different from the object in the data set.
(x <- c(2011:2020))
(x <- data_frame((x), 3))
(x <- data_frame((x), 3))
(x <- data_frame((x), 3))
# And than call it for the use
library(tidyverse)
(x <- data_frame((x), 3))
(x <- c(200:100))
(x <- data_frame((x), 3))
( y <- c(23:40))
x
y
?cont
??cont
?count
a <- c(1:30)
a
# (b) (30, 29, 28, ..., 2, 1)
b <- c(30:1)
b
# (c) (1, 2, 3, ..., 19, 20, 19, 18, ..., 2, 1)
c <- c(1:20, 19:1)
c
futureforum <- c(44, 66, 33)
?rep
e <- rep(futureforum, 20)
e
# (f) (44, 66, 33, 44, 66, 33, ..., 44, 66, 33, 44) where there are
# 11 occurrences of 44, 10 occurrences of 66 and 10 occurrences of 33.
f <- rep(futureforum, l=31)
f
# (g) (44, 44, ..., 44, 66, 66, ..., 66, 33, 33, ..., 33) where there are
# 10 occurrences of 44, 20 occurrences of 44, 20 occurrences of 66,
# 30 occurrences of 33.
g <- rep(futureforum, times=c(10, 20, 30))
valuex <- exp(x)*cos(x)
## 2. Create a vector of the value of e^{x}cos(x) at x = 3, 3.1, 3.2, ..., 7.
x <- seq(3, 7, by = 0.1)
valuex <- exp(x)*cos(x)
valuex
## 3. Create the following vectors:
# (a) (0.1^{3}0.2^{1}, 0.1^{6}0.2^{3}, ..., 0.1^{37}0.2^{32})
valuea <- (0.1^seq(3, 37, by = 3))*(0.2^seq(1,32,by=3))
## 3. Create the following vectors:
# (a) (0.1^{3}0.2^{1}, 0.1^{6}0.2^{3}, ..., 0.1^{37}0.2^{32})
valuea <- (0.1^seq(3, 37, by = 3))*(0.2^seq(1,32,by=3))
valuea
# (b) (2, \dfrac{2^{2}}{4}, \dfrac{2^{3}}{4}, \dfrac{2^{4}}{5}, ...,
# \dfrac{2^{26}}{26})
valueb <- (2^(1:26))/c(1, 4, 4, 5:26)
valueb
## 4. Calculate the following:
# (a) \sum_{n=1}^{200}(i^{3}+4i^{2})
valuena <- (1:200)
calculatena <- sum(valuena^3 + 4 * valuena^2)
calculatena
calculatenb <- sum((2^valuenb) / valuenb + 3^valuenb / (valuenb^2))
# (b) \sum_{n=1}^{25}(\dfrac{2^{n}}{n} + \dfrac{3^{n}}{n^{2}})
valuenb <- (1:25)
calculatenb <- sum((2^valuenb) / valuenb + 3^valuenb / (valuenb^2))
## 5. Use the function "paste" to create the following character vectors
# (a) ("Cambodia 1", "Cambodia 2", ..., "Cambodia 34")
Cambodia <- paste("Cambodia", 1:30)
Cambodia
set.seed(50)
xVec <- sample(0:999, 250, replace=T)
yVec <- sample(0:999, 250, replace=T)
# Suppose x = (x_{1}, x_{2}, ..., x_{n}) denotes the vector xVec
# and y = (y_{1}, y_{2}, ..., y_{n}) denotes the vector yVec
?length
# (a) Create the vector (y_{2}-x_{1}, ..., y_{n}-x_{n-1})
xy <- yVec[-1] - xVec[-length(xVec)]
cos(xVec[-1])
# (c) Create the vector
# (x_{1} + 2x_{2} - x_{3}, x_{2} + 2x_{3} - x{4}, ..., x_{n-2} +2x_{n-1} - x_{n})
vecxy <- xVec[-c(249,250)] + 2*xVec[-c(1,250)]-xVec[-c(1,2)]
# (d) Calculate \sum_{i=1}^{n-1} \dfrac{e^{-x_{i+1}}}{x_{i} + 10}
sum(exp(-xVec[-1])/(xVec[-length(xVec)]+10))
?rep
# 11 occurrences of 44, 10 occurrences of 66 and 10 occurrences of 33.
# (f) (44, 66, 33, 44, 66, 33, ..., 44, 66, 33, 44) where there are
# 11 occurrences of 44, 10 occurrences of 66 and 10 occurrences of 33.
f <- rep(futureforum, l=31)
f
## Type these data into a data frame with column names area and sale.price.
area <- c(694, 905, 802, 1366, 716, 963, 821, 714, 1018, 887, 790, 696,
771, 1006, 1191)
sale.price <- c(192, 215, 215, 274, 112.7, 185, 212, 220, 276, 260, 221, 255,
260, 293, 375)
datasale <- data.frame(area, sale.price)
datasale
# (a) Plot sale.price versus area.
plot(sale.price ~ area)
# (b) Use the hist() command to plot a histogram of the sale prices.
hist(datasale$sale.price)
# (c) Repeat (a) and (b) after taking logarithms of sale prices.
plot(sale.price ~ area, data=datasale, log="y",
pch=16, xlab="Floor Area", ylab="Sale Price",
main="(c) log(sale.price) vs area")
# (c) Repeat (a) and (b) after taking logarithms of sale prices.
plot(sale.price ~ area, data=datasale, log="y",
pch=16, xlab="Floor Area", ylab="Sale Price",
main="log(sale.price) vs area")
# (c) Repeat (a) and (b) after taking logarithms of sale prices.
plot(sale.price ~ area, data=datasale, log="y",
pch=10, xlab="Floor Area", ylab="Sale Price",
main="log(sale.price) vs area")
hist(log(datasale$sale.price))
hist(log(datasale$sale.price),
xlab="Sale Price (logarithmic scale)",
main="Histogram of log(sale.price)")
library(DAAG)
odata <- data.frame(orings)
odata86 <- odata[c(1,2,4,11,13,18), ]
plot(Total ~ Temperature, data = odata86,
main="Temperature vs Total")
## 3. For the data frame "possum" (DAAG package)
# (a) Use the function str() to get information on each of the columns.
dpossum <- data.frame(possum)
str(dpossum)
# (b) Using the function complete.cases(), determine the rows in which one or
# more values is missing. Print those rows.
complete.cases(dpossum)
is.na(dpossum)
## 4. For the data frame "ais" (DAAG package)
# (a) Use the function str() to get information on each of the columns.
# Determine whether any of the columns hold missing values.
dais <- data.frame(ais)
?ais
str(dais)
complete.cases(dais)
view(dais)
view(dais$sex)
dais$sex
library(plyr)
count(dais$sex)
drain <- data.frame(rainforest)
!is.na(drain)
count(!is.na(drain))
sum(!is.na(drain))
### Filter rows with filter()
## 1. Use "flights" data frame in the "nycflights13" library and use
## "tidyverse" package. Find all flights that:
library(tidyverse)
library(nycflights13)
str(flights)
?flights
head(flights$arr_delay)
filter(flights, arr_delay >= 120)
# (b) Show the flights "dest" variable that flew to Houston where
# the destination is either "IAH" or "HOU".
head(flights$dest)
filter(flights, dest == "IAH" | dest == "HOU")
?flights
airlines
filter(flights, carrier %in% c("AA", "DL", "UA"))
filter(flights, month >= 7, month <= 9) # or
dta <- filter(flights, month >= 7, month <= 9) # or
dta
# (f) Were delayed by at least an hour, but made up over 30 minutes in flight.
filter(flights, dep_delay >= 60, dep_delay - arr_delay > 30)
summarise(flights)
library(tidyverse)
library(tidyr)
library(deven)
library(diven)
library(foreign)
mydata <- read.dta("C:/Users/Nith Kosal/Downloads/Cambodia Enterprise Surveys 2016/Data/Cambodia-2016-full-data.dta")
library("writexl")
write_xlsx(data,"C:/Users/Nith Kosal/Downloads/Cambodia Enterprise Surveys 2016/Data\\file name.xlsx")
write.csv(mydata, file = "data.csv")
